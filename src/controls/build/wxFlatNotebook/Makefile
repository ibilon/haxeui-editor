# C++ Shared Library Makefile autogenerated by premake
# Don't edit this file! Instead edit `premake.lua` then rerun `make`

ifndef CONFIG
  CONFIG=Release
endif

ifeq ($(CONFIG),Release)
  BINDIR := ../../../../output/lib/haxeui-editor
  LIBDIR := ../../../..
  OBJDIR := .objsu
  OUTDIR := ../../../../output/lib/haxeui-editor
  CPPFLAGS := -MMD -D "WXMAKINGDLL_FNB" -D "MONOLITHIC" -D "WXUSINGDLL" -D "UNICODE" -D "_UNICODE" -D "__WX__" -D "NDEBUG" -I "../../include"
  CFLAGS += $(CPPFLAGS) $(TARGET_ARCH) -fPIC -O3 -Wall -fPIC -fno-strict-aliasing `wx-config --debug=no --cflags`
  CXXFLAGS := $(CFLAGS) -std=c++11
  LDFLAGS += -L$(BINDIR) -L$(LIBDIR) -shared -s `wx-config --libs`
  LDDEPS :=
  RESFLAGS := -D "WXMAKINGDLL_FNB" -D "MONOLITHIC" -D "WXUSINGDLL" -D "UNICODE" -D "_UNICODE" -D "__WX__" -D "NDEBUG" -I "../../include"
  TARGET := libwx_gtk2u_flatnotebook-2.8_wxfb.so
  BLDCMD = $(CXX) -o $(OUTDIR)/$(TARGET) $(OBJECTS) $(LDFLAGS) $(RESOURCES) $(TARGET_ARCH)
endif

ifeq ($(CONFIG),Debug)
  BINDIR := ../../../../output/lib/haxeui-editor
  LIBDIR := ../../../..
  OBJDIR := .objsud
  OUTDIR := ../../../../output/lib/haxeui-editor
  CPPFLAGS := -MMD -D "WXMAKINGDLL_FNB" -D "MONOLITHIC" -D "WXUSINGDLL" -D "UNICODE" -D "_UNICODE" -D "__WX__" -D "NDEBUG" -D "__WXFB_DEBUG__" -I "../../include"
  CFLAGS += $(CPPFLAGS) $(TARGET_ARCH) -fPIC -g -Wall -fPIC -O0 `wx-config --debug=no --cflags`
  CXXFLAGS := $(CFLAGS) -std=c++11
  LDFLAGS += -L$(BINDIR) -L$(LIBDIR) -shared `wx-config --debug=no --libs`
  LDDEPS :=
  RESFLAGS := -D "WXMAKINGDLL_FNB" -D "MONOLITHIC" -D "WXUSINGDLL" -D "UNICODE" -D "_UNICODE" -D "__WX__" -D "NDEBUG" -D "__WXFB_DEBUG__" -I "../../include"
  TARGET := libwx_gtk2u_flatnotebook-2.8_wxfb.so
  BLDCMD = $(CXX) -o $(OUTDIR)/$(TARGET) $(OBJECTS) $(LDFLAGS) $(RESOURCES) $(TARGET_ARCH)
endif

OBJECTS := \
	$(OBJDIR)/xh_fnb.o \
	$(OBJDIR)/fnb_customize_dlg.o \
	$(OBJDIR)/fnb_resources.o \
	$(OBJDIR)/wxFlatNotebook.o \
	$(OBJDIR)/renderer.o \
	$(OBJDIR)/popup_dlg.o \

MKDIR_TYPE := msdos
CMD := $(subst \,\\,$(ComSpec)$(COMSPEC))
ifeq (,$(CMD))
  MKDIR_TYPE := posix
endif
ifeq (/bin/sh.exe,$(SHELL))
  MKDIR_TYPE := posix
endif
ifeq ($(MKDIR_TYPE),posix)
  CMD_MKBINDIR := mkdir -p $(BINDIR)
  CMD_MKLIBDIR := mkdir -p $(LIBDIR)
  CMD_MKOUTDIR := mkdir -p $(OUTDIR)
  CMD_MKOBJDIR := mkdir -p $(OBJDIR)
else
  CMD_MKBINDIR := $(CMD) /c if not exist $(subst /,\\,$(BINDIR)) mkdir $(subst /,\\,$(BINDIR))
  CMD_MKLIBDIR := $(CMD) /c if not exist $(subst /,\\,$(LIBDIR)) mkdir $(subst /,\\,$(LIBDIR))
  CMD_MKOUTDIR := $(CMD) /c if not exist $(subst /,\\,$(OUTDIR)) mkdir $(subst /,\\,$(OUTDIR))
  CMD_MKOBJDIR := $(CMD) /c if not exist $(subst /,\\,$(OBJDIR)) mkdir $(subst /,\\,$(OBJDIR))
endif

.PHONY: clean

$(OUTDIR)/$(TARGET): $(OBJECTS) $(LDDEPS) $(RESOURCES)
	@echo Linking wxFlatNotebook
	-@$(CMD_MKBINDIR)
	-@$(CMD_MKLIBDIR)
	-@$(CMD_MKOUTDIR)
	@$(BLDCMD)

clean:
	@echo Cleaning wxFlatNotebook
ifeq ($(MKDIR_TYPE),posix)
	-@rm -f $(OUTDIR)/$(TARGET)
	-@rm -rf $(OBJDIR)
else
	-@if exist $(subst /,\,$(OUTDIR)/$(TARGET)) del /q $(subst /,\,$(OUTDIR)/$(TARGET))
	-@if exist $(subst /,\,$(OBJDIR)) del /q $(subst /,\,$(OBJDIR))
	-@if exist $(subst /,\,$(OBJDIR)) rmdir /s /q $(subst /,\,$(OBJDIR))
endif

$(OBJDIR)/xh_fnb.o: ../../src/wxFlatNotebook/xh_fnb.cpp
	-@$(CMD_MKOBJDIR)
	@echo $(notdir $<)
	@$(CXX) $(CXXFLAGS) -o $@ -c $<

$(OBJDIR)/fnb_customize_dlg.o: ../../src/wxFlatNotebook/fnb_customize_dlg.cpp
	-@$(CMD_MKOBJDIR)
	@echo $(notdir $<)
	@$(CXX) $(CXXFLAGS) -o $@ -c $<

$(OBJDIR)/fnb_resources.o: ../../src/wxFlatNotebook/fnb_resources.cpp
	-@$(CMD_MKOBJDIR)
	@echo $(notdir $<)
	@$(CXX) $(CXXFLAGS) -o $@ -c $<

$(OBJDIR)/wxFlatNotebook.o: ../../src/wxFlatNotebook/wxFlatNotebook.cpp
	-@$(CMD_MKOBJDIR)
	@echo $(notdir $<)
	@$(CXX) $(CXXFLAGS) -o $@ -c $<

$(OBJDIR)/renderer.o: ../../src/wxFlatNotebook/renderer.cpp
	-@$(CMD_MKOBJDIR)
	@echo $(notdir $<)
	@$(CXX) $(CXXFLAGS) -o $@ -c $<

$(OBJDIR)/popup_dlg.o: ../../src/wxFlatNotebook/popup_dlg.cpp
	-@$(CMD_MKOBJDIR)
	@echo $(notdir $<)
	@$(CXX) $(CXXFLAGS) -o $@ -c $<

-include $(OBJECTS:%.o=%.d)

